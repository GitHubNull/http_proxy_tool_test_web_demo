version: '3.8'

services:
  proxy-test-tool:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_VERSION: ${BUILD_VERSION:-v1.0.0}
        BUILD_TIME: ${BUILD_TIME:-$(date -u +"%Y-%m-%dT%H:%M:%SZ")}
        BUILD_COMMIT: ${BUILD_COMMIT:-unknown}
    image: proxy-test-tool:${TAG:-latest}
    container_name: proxy-test-tool-dev
    restart: unless-stopped
    ports:
      - "${HOST_PORT:-8080}:8080"
    environment:
      - GIN_MODE=${GIN_MODE:-debug}
      - PORT=8080
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    networks:
      - proxy-test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--timeout=3", "http://localhost:8080/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      # 开发环境代码挂载（可选）
      - ./logs:/app/logs
      # 如果需要持久化配置
      - ./config:/app/config:ro
    labels:
      - "com.proxy-test-tool.description=HTTP/WebSocket代理测试工具 - 开发环境"
      - "com.proxy-test-tool.version=${BUILD_VERSION:-v1.0.0}"
      - "com.proxy-test-tool.environment=development"
    # 资源限制（开发环境较宽松）
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: proxy-test-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - proxy-test-tool
    networks:
      - proxy-test-network
    profiles:
      - nginx
    labels:
      - "com.proxy-test-tool.service=nginx"
      - "com.proxy-test-tool.environment=development"

networks:
  proxy-test-network:
    driver: bridge
    name: proxy-test-network

volumes:
  proxy-test-logs:
    driver: local
  proxy-test-config:
    driver: local

# 可选：如果需要数据库或其他服务
# volumes:
#   proxy-test-data:
#     driver: local 